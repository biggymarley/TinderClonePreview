{"version":3,"sources":["content/Dashboard/Dashboard.js"],"names":["Dashboard","sx","display","width","flexShrink","boxSizing","variant","anchor","DraweHeader","MainTab","component","flexGrow","bgcolor","minHeight","React","useState","value","setValue","typography","overflow","textColor","indicatorColor","onChange","event","newValue","classes","tablist","label","disableRipple","direction","in","setIslogged","useContext","LogginContext","HeaderRoot","UserButton","startIcon","alt","src","height","userName","logoutButton","onClick","color","background","xs","lg","px","fontFamily","letterSpacing","fontSize","textTransform","borderRadius","backgroundColor","paddingBottom","marginLeft"],"mappings":"0TAae,SAASA,IACtB,OACE,eAAC,IAAD,CAAKC,GAAI,CAAEC,QAAS,QAApB,UACE,eAAC,IAAD,CACED,GAAI,CACFE,MAPU,IAQVC,WAAY,EACZ,qBAAsB,CACpBD,MAVQ,IAWRE,UAAW,eAGfC,QAAQ,YACRC,OAAO,OAVT,UAYE,cAACC,EAAD,IACA,cAACC,EAAD,OAEF,cAAC,IAAD,CACEC,UAAU,OACVT,GAAI,CAAEU,SAAU,EAAGC,QAAS,UAAWC,UAAW,cAQ1D,SAASJ,IACP,MAA0BK,IAAMC,SAAS,KAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,cAAC,IAAD,CAAKhB,GAAI,CAAEE,MAAO,OAAQe,WAAY,QAAQC,SAAS,UAAvD,SACE,eAAC,IAAD,CACEH,MAAOA,EACPI,UAAU,YACVC,eAAe,YAHjB,UAKE,cAAC,IAAD,UACE,eAAC,IAAD,CACEC,SAbW,SAACC,EAAOC,GAC3BP,EAASO,IAaD,aAAW,uBACXvB,GAAIwB,EAAQC,QACZN,UAAU,YACVC,eAAe,YALjB,UAOE,cAAC,IAAD,CAAKM,MAAM,UAAUX,MAAM,IAAIf,GAAIwB,EAAQE,MAAOC,eAAa,IAC/D,cAAC,IAAD,CAAKD,MAAM,WAAWX,MAAM,IAAIf,GAAIwB,EAAQE,MAAOC,eAAa,SAGpE,cAAC,IAAD,CAAOC,UAAU,QAAQC,GAAc,MAAVd,EAA7B,SACE,cAAC,IAAD,CAAUA,MAAM,IAAhB,uBAEF,cAAC,IAAD,CAAOa,UAAU,OAAOC,GAAc,MAAVd,EAA5B,SACA,cAAC,IAAD,CAAUA,MAAM,IAAhB,6BAOR,IAAMR,EAAc,WAClB,IAAQuB,EAAgBC,qBAAWC,KAA3BF,YAER,OACE,eAAC,IAAD,CAAS9B,GAAIwB,EAAQS,WAArB,UACE,cAAC,IAAD,CAAKjC,GAAI,CAAEU,SAAU,GAArB,SACE,cAAC,IAAD,CACEV,GAAIwB,EAAQU,WACZC,UACE,cAAC,IAAD,CACEC,IAAI,cACJC,IAAI,gCACJrC,GAAI,CAAEE,MAAO,GAAIoC,OAAQ,MAN/B,SAUE,cAAC,IAAD,CAAYtC,GAAIwB,EAAQe,SAAxB,uBAGJ,cAAC,IAAD,CAAYvC,GAAIwB,EAAQgB,aAAcC,QAAS,kBAAMX,GAAY,IAAjE,SACE,cAAC,IAAD,CAAsB9B,GAAI,CAAE0C,MAAO,mBAMrClB,EAAU,CACdS,WAAY,CACVU,WAAY,0CACZL,OAAQ,CAAEM,GAAI,OAAQC,GAAI,QAC1BC,GAAI,oBAGNP,SAAU,CACRG,MAAO,UACPK,WAAY,OACZC,cAAe,MACfC,SAAU,OACVC,cAAe,cAEjBhB,WAAY,CACVQ,MAAO,UACPS,aAAc,QAEhBX,aAAc,CACZY,gBAAiB,aAEnB1B,MAAO,CACLgB,MAAO,qBACPK,WAAY,OACZM,cAAe,GAEjB5B,QAAS,CACL6B,WAAW,QACb,uBAAwB,CACtBhB,OAAQ,MACRa,aAAc","file":"static/js/6.9dd2a865.chunk.js","sourcesContent":["import PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\nimport TabContext from \"@mui/lab/TabContext\";\nimport TabList from \"@mui/lab/TabList\";\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport { Avatar, Button, IconButton, Slide, Typography } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport Tab from \"@mui/material/Tab\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport React, { useContext } from \"react\";\nimport { LogginContext } from \"../../App\";\nconst drawerWidth = 375;\n\nexport default function Dashboard() {\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          \"& .MuiDrawer-paper\": {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n        variant=\"permanent\"\n        anchor=\"left\"\n      >\n        <DraweHeader />\n        <MainTab />\n      </Drawer>\n      <Box\n        component=\"main\"\n        sx={{ flexGrow: 1, bgcolor: \"#f0f2f4\", minHeight: \"100vh\" }}\n      >\n        {/* <CreationStepper /> */}\n      </Box>\n    </Box>\n  );\n}\n\nfunction MainTab() {\n  const [value, setValue] = React.useState(\"1\");\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: \"100%\", typography: \"body1\",overflow:\"hidden\" }}>\n      <TabContext\n        value={value}\n        textColor=\"secondary\"\n        indicatorColor=\"secondary\"\n      >\n        <Box>\n          <TabList\n            onChange={handleChange}\n            aria-label=\"lab API tabs example\"\n            sx={classes.tablist}\n            textColor=\"secondary\"\n            indicatorColor=\"secondary\"\n          >\n            <Tab label=\"Matches\" value=\"1\" sx={classes.label} disableRipple />\n            <Tab label=\"Messages\" value=\"2\" sx={classes.label} disableRipple />\n          </TabList>\n        </Box>\n        <Slide direction=\"right\" in={value === \"1\"}>\n          <TabPanel value=\"1\">Matches</TabPanel>\n        </Slide>\n        <Slide direction=\"left\" in={value === \"2\"}>\n        <TabPanel value=\"2\">Messages</TabPanel>\n        </Slide>\n      </TabContext>\n    </Box>\n  );\n}\n\nconst DraweHeader = () => {\n  const { setIslogged } = useContext(LogginContext);\n\n  return (\n    <Toolbar sx={classes.HeaderRoot}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Button\n          sx={classes.UserButton}\n          startIcon={\n            <Avatar\n              alt=\"profile-pic\"\n              src=\"https://picsum.photos/200/300\"\n              sx={{ width: 35, height: 35 }}\n            />\n          }\n        >\n          <Typography sx={classes.userName}>Biggy</Typography>\n        </Button>\n      </Box>\n      <IconButton sx={classes.logoutButton} onClick={() => setIslogged(false)}>\n        <PowerSettingsNewIcon sx={{ color: \"#FFFFFF\" }} />\n      </IconButton>\n    </Toolbar>\n  );\n};\n\nconst classes = {\n  HeaderRoot: {\n    background: \"linear-gradient(225deg,#ff6036,#fd267a)\",\n    height: { xs: \"60px\", lg: \"73px\" },\n    px: \".5rem !important\",\n  },\n\n  userName: {\n    color: \"#FFFFFF\",\n    fontFamily: \"Nova\",\n    letterSpacing: \"1px\",\n    fontSize: \"1rem\",\n    textTransform: \"capitalize\",\n  },\n  UserButton: {\n    color: \"#000000\",\n    borderRadius: \"12em\",\n  },\n  logoutButton: {\n    backgroundColor: \"#00000020\",\n  },\n  label: {\n    color: \"#000000 !important\",\n    fontFamily: \"Nova\",\n    paddingBottom: 0,\n  },\n  tablist: {\n      marginLeft:\".5rem\",\n    \"& .MuiTabs-indicator\": {\n      height: \"4px\",\n      borderRadius: \"12em\",\n    },\n  },\n};\n"],"sourceRoot":""}